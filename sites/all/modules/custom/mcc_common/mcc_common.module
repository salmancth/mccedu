<?php

include_once 'includes/mcc.db.class.inc';

function mcc_common_menu() {
    $items = array();

    $items['academic-syllabus-brief'] = array(
        'title' => 'General Syllabus in Brief',
        'description' => 'General Syllabus in Brief',
        'page callback' => 'mcc_common_academic_syllabus_brief',
        'page arguments' => array(),
        'access arguments' => array('access syllabus'),
        'file' => 'includes/syllabus.inc'
    );

    $items['port-user-from-mccportal'] = array(
        'title' => 'User Migration',
        'page callback' => 'port_user_from_mccportal',
        'page arguments' => array(),
        'access arguments' => array('access content'),
        'file' => 'includes/users.inc'
    );

    $items['eduportal-in'] = array(
        'title' => 'Portal In',
        'page callback' => 'eduportal_in',
        'page arguments' => array(),
        'access arguments' => array('access content'),
        'file' => 'includes/users.inc'
    );

    $items['read-pdf/%ctools_js/%'] = array(
        'title' => 'MCC Education',
        'page callback' => 'mcc_common_read_pdf',
        'page arguments' => array(),
        'access arguments' => array('access syllabus'),
        'file' => 'includes/syllabus.inc',
        'page arguments' => array(1, 2),
    );
//  $items['academic-syllabus/test'] = array(
//    'title' => 'Remove Module Content',
//    'description' => 'Remove Module Content',
//    'page callback' => 'mcc_common_test_content',
//    'page arguments' => array(),
//    'access arguments' => array('create syllabus'),
//    'file' => 'includes/syllabus.inc'
//  );
    /**
     * New Menu For New Type of Syllabus
     */
    $items['syllabus/upload-syllabus-by-type'] = array(
        'title' => 'Upload Syllabus',
        'description' => 'Upload Syllabus',
        'page callback' => 'mcc_common_upload_syllabus_by_type',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/upload-pdf-version'] = array(
        'title' => 'Upload Pdf Version',
        'page callback' => 'mcc_common_upload_pdf_version_syllabus_by_type',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/parse-syllabus-by-type'] = array(
        'title' => 'Parse Syllabus',
        'description' => 'Parse Syllabus',
        'page callback' => 'mcc_common_parse_syllabus_by_type',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/academic-syllabus-by-type/%'] = array(
        'title' => 'General Syllabus',
        'description' => 'General Syllabus',
        'page callback' => 'mcc_common_syllabus_by_type',
        'page arguments' => array(2),
        'access arguments' => array('access syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/academic-syllabus-pdf/%'] = array(
        'title' => 'General Syllabus',
        'description' => 'General Syllabus',
        'page callback' => 'mcc_common_syllabus_by_type_pdf',
        'page arguments' => array(2),
        'access arguments' => array('access syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/academic-syllabus-brief-by-type/%'] = array(
        'title' => 'General Syllabus in Brief',
        'description' => 'General Syllabus in Brief',
        'page callback' => 'mcc_common_syllabus_brief_by_type',
        'page arguments' => array(2),
        'access arguments' => array('access syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/subject/%'] = array(
        'title' => 'Subject Details',
        'description' => 'Subject Syllabus',
        'page callback' => 'mcc_common_subject_details_by_syllabus_type',
        'page arguments' => array(2),
        'access arguments' => array('access syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/department-edit/%'] = array(
        'title' => 'Edit Department',
        'description' => 'Edit Department',
        'page callback' => 'mcc_common_edit_department_by_type',
        'page arguments' => array(2),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/upload-modules-materials'] = array(
        'title' => 'Upload Module Materials',
        'description' => 'Upload Module Materials',
        'page callback' => 'mcc_common_upload_module_materials',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/remove-module-content'] = array(
        'title' => 'Remove Module Content',
        'description' => 'Remove Module Content',
        'page callback' => 'mcc_common_remove_module_content',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/upload-materials'] = array(
        'title' => 'Upload Materials',
        'description' => 'Upload Materials',
        'page callback' => 'mcc_common_upload_materials',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/remove-material'] = array(
        'title' => 'Remove Material',
        'description' => 'Remove Material',
        'page callback' => 'mcc_common_remove_material',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/remove-audio-video'] = array(
        'title' => 'remove-audio-video',
        'page callback' => 'mcc_common_remove_audio_video',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/upload-audio-video'] = array(
        'title' => 'Upload Audio/ Video',
        'description' => 'Upload Audio/ Video',
        'page callback' => 'mcc_common_upload_audio_vedio',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/upload-qb'] = array(
        'title' => 'Upload Question Bank',
        'page callback' => 'mcc_common_upload_qb',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/questionbank.inc'
    );
    $items['syllabus/uploaded-qb'] = array(
        'title' => 'Uploaded Question Bank',
        'page callback' => 'mcc_common_uploaded_qb',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/questionbank.inc'
    );
    $items['syllabus/question/edit/%'] = array(
        'title' => 'Edit Question',
        'page callback' => 'mcc_common_uploaded_qb_edit',
        'page arguments' => array(3),
        'access arguments' => array('upload qb'),
        'file' => 'includes/questionbank.inc'
    );
    $items['syllabus/question/delete/%'] = array(
        'title' => 'Delete Question',
        'page callback' => 'mcc_common_uploaded_qb_delete',
        'page arguments' => array(3),
        'access arguments' => array('upload qb'),
        'file' => 'includes/questionbank.inc'
    );
    $items['syllabus/exam/%/%ctools_js'] = array(
        'title' => 'Course Exam',
        'page callback' => 'mcc_common_exam',
        'page arguments' => array(2, 3),
        'access arguments' => array('access content'),
        'file' => 'includes/questionbank.inc'
    );
    $items['syllabus/course-registration'] = array(
        'title' => 'MCC Education Portal Course Registration',
        'page callback' => 'mcc_common_course_registration',
        'page arguments' => array(),
        'access arguments' => array('course registration'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/registration/delete/%'] = array(
        'title' => 'Delete Registration',
        'page callback' => 'mcc_common_registration_delete',
        'page arguments' => array(3),
        'access arguments' => array('course registration'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/course-instructor-assignment'] = array(
        'title' => 'MCC Education Portal - Course Instructor Assignment',
        'page callback' => 'mcc_common_course_instructor_assignment',
        'page arguments' => array(),
        'access arguments' => array('course registration'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-instructor-list'] = array(
        'title' => 'MCC Education Portal - Course Instructors',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mcc_common_course_instructors'),
        'access arguments' => array('course registration'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-instructor-unassign/%'] = array(
        'title' => 'MCC Education Portal - Course Instructors',
        'page callback' => 'mcc_common_course_instructor_del',
        'page arguments' => array(2),
        'access arguments' => array('course registration'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/my-courses'] = array(
        'title' => 'MCC Education Portal - My Courses',
        'page callback' => 'mcc_common_my_courses',
        'page arguments' => array(),
        'access arguments' => array('access content'),
        'file' => 'includes/users.inc'
    );
    $items['syllabus/my-courses-result'] = array(
        'title' => 'MCC Education Portal - My Result',
        'page callback' => 'mcc_common_my_courses_result',
        'page arguments' => array(),
        'access arguments' => array('access content'),
        'file' => 'includes/users.inc'
    );
    $items['syllabus/user-courses-result/%'] = array(
        'title' => 'MCC Education Portal - My Result',
        'page callback' => 'mcc_common_user_courses_result',
        'page arguments' => array(2),
        'access arguments' => array('access content'),
        'file' => 'includes/users.inc'
    );
    $items['syllabus/instructor-for-courses'] = array(
        'title' => 'MCC Education Portal - As Faculty',
        'page callback' => 'mcc_common_instructor_for_courses',
        'page arguments' => array(),
        'access arguments' => array('access content'),
        'file' => 'includes/users.inc'
    );
    $items['syllabus/my-registered-users'] = array(
        'title' => 'MCC Education Portal - My Registered Users',
        'page callback' => 'mcc_common_registered_users',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/users.inc'
    );
    $items['mcc-user-mail-send'] = array(
        'title' => 'Send User Mail',
        'description' => 'Send User Mail',
        'page callback' => '_mcc_user_mail_send',
        'access arguments' => array('upload qb'),
        //'type' => MENU_CALLBACK,
        'file' => 'includes/users.inc',
    );
    $items['syllabus/course-result'] = array(
        'title' => 'MCC Education Portal - Course Result',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mcc_common_course_result'),
        'access arguments' => array('upload qb'),
        'file' => 'includes/users.inc'
    );
    $items['syllabus/course-class-create'] = array(
        'title' => 'MCC Education Portal - Class Create',
        'page callback' => 'mcc_common_course_class_create',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-class/delete/%'] = array(
        'title' => 'MCC Education Portal - Class Delete',
        'page callback' => 'mcc_common_course_class_delete',
        'page arguments' => array(3),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-class/edit/%'] = array(
        'title' => 'MCC Education Portal - Class Edit',
        'page callback' => 'mcc_common_course_class_edit',
        'page arguments' => array(3),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-classes'] = array(
        'title' => 'MCC Education Portal - Attendance',
        'page callback' => 'mcc_common_course_classes',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/update-class-attendess'] = array(
        'title' => 'Twilio',
        'description' => 'Twilio',
        'page callback' => 'mcc_common_update_class_attendess',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-url'] = array(
        'title' => 'Course Meeting URL',
        'description' => 'Course Meeting URL',
        'page callback' => 'mcc_common_course_url',
        'page arguments' => array(),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/course-url-delete/%'] = array(
        'title' => 'Delete Question',
        'page callback' => 'mcc_common_course_url_delete',
        'page arguments' => array(2),
        'access arguments' => array('create syllabus'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/calendar'] = array(
        'title' => 'Course Calendar',
        'description' => 'Course Calendar',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mcc_common_course_calendar'),
        'access arguments' => array('access content'),
        'file' => 'includes/new_syllabus.inc'
    );
    $items['syllabus/course-schedule-create'] = array(
        'title' => 'MCC Education Portal - Course Schedule',
        'page callback' => 'mcc_common_course_schedule_create',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-schedule/delete/%'] = array(
        'title' => 'MCC Education Portal - Schedule Delete',
        'page callback' => 'mcc_common_course_schedule_delete',
        'page arguments' => array(3),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    $items['syllabus/course-schedule'] = array(
        'title' => 'MCC Education Portal - Schedule',
        'page callback' => 'mcc_common_course_schedule',
        'page arguments' => array(),
        'access arguments' => array('upload qb'),
        'file' => 'includes/instructors.inc'
    );
    return $items;
}

/**
 * Implemetation of hook_eck_property_type_schema ($schema, $type)
 */
function mcc_common_eck_property_type_schema_alter(&$schema, $type) {
    switch ($type) {
        case 'text_long':
            $schema = array(
                'description' => 'Long Text',
                'type' => 'text',
                'size' => 'big',
                'not null' => FALSE,
            );
            break;
    }
}

/**
 * Implements hook_permission().
 */
function mcc_common_permission() {
    return array(
        'create syllabus' => array(
            'title' => t('Create Syllabus'),
        ),
        'inspect syllabus' => array(
            'title' => t('Inspect Syllabus'),
        ),
        'access syllabus' => array(
            'title' => t('Access Syllabus'),
        ),
        'upload qb' => array(
            'title' => t('upload Question Bank'),
        ),
        'course registration' => array(
            'title' => t('Course Registration'),
        )
    );
}

/**
 * Implementation of hook_theme.
 */
function mcc_common_theme() {
    $themes = array(
        'syllabus_upload_form_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-upload-form',
        ),
        'syllabus_entry_form_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-entry-form',
        ),
        'syllabus_academic_list_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-academic-list',
        ),
        'syllabus_academic_brief_list_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-academic-brief-list',
        ),
        'syllabus_subject_details_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-subject-details',
        ),
        'list_audo_video_display_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'audio-video-list',
        ),
        'list_materials_display_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'materials-list',
        ),
        'list_course_urls_display_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'course-url-list',
        ),
        'list_uploaded_qb_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'uploaded-qb-list',
        ),
        'completed_registration_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'completed-registration-list',
        ),
        'pdf_view_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'pdf-view',
        ),
        'mcc_applications' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'page--mcc-dashboard',
            'render element' => 'element',
        ),
        'syllabus_by_type_list_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-list',
        ),
        'syllabus_by_type_brief_list_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-brief-list',
        ),
        'syllabus_by_type_subject_details_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-subject-details',
        ),
        'syllabus_by_type_pdf_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-pdf',
        ),
        'syllabus_by_type_my_courses_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-my-courses',
        ),
        'syllabus_by_type_my_courses_result_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-my-courses-result',
        ),
        'syllabus_by_type_registered_users' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-registered-users',
        ),
        'syllabus_by_type_course_result' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-course-result',
        ),
        'syllabus_by_type_course_instructors' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-course-instructors',
        ),
        'syllabus_class_list_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-class-list',
        ),
        'syllabus_schedule_list_template' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-schedule-list',
        ),
        'mcc_edu_calendar' => array(
            'path' => drupal_get_path('module', 'mcc_common') . '/templates',
            'template' => 'syllabus-by-type-edu-calendar',
        ),
    );
    return $themes;
}

/*
 * implement hook_user_login
 */

function mcc_common_user_login(&$edit, $account) {
//    drupal_goto('academic-syllabus-brief');
}

function mcc_common_user_logout($account) {
    drupal_set_message('You are signed out from education portal, but you are still loggedin MCC reporting portal.');
}

/*
 * implements hook__user_delete
 */

function mcc_common_user_delete($account) {
    
}

/*
 * implements hook_form_alter
 */

function mcc_common_form_alter(&$form, &$form_state, $form_id) {
//    global $user;
//    if (!_check_if_in_role('administrator', $user->uid)) {
//        if ('user_profile_form' == $form_id) {
//            drupal_goto('academic-syllabus-brief');
//        }
//    }
}

/*
 * implements hook_query_TAG_alter
 */

function mcc_common_query_random_alter($query) {
    $query->orderRandom();
}

/**
 * Implements hook_init
 */
function mcc_common_init() {
    global $user;

    if (empty($user->uid)) {
        $redirect = true;
        if ('user' == arg(0))
            $redirect = false;
        else if ('eduportal-in' == arg(0))
            $redirect = false;
        else if ('port-user-from-mccportal' == arg(0))
            $redirect = false;
        if ($redirect)
            drupal_goto('user/login');
    } else {
        if (!_check_if_in_role('administrator', $user->uid)) {
//            if (('user' == arg(0) && 'logout' != arg(1)) || ('user' == arg(0) && 'edit' != arg(2))) {
//                drupal_goto('academic-syllabus-brief');
//            }
            if (!empty($user->uid) && 'users' == arg(0)) {
                drupal_goto('academic-syllabus-brief');
            }
            if ('node' == arg(0)) {
                drupal_goto('academic-syllabus-brief');
            }
        }
    }
}

/*
 * check if user has particular role
 */

function _check_if_in_role($role, $uid = NULL, $user = NULL) {
    if (!empty($uid))
        $user = user_load($uid);
    if (empty($user))
        return false;
    else {
        if (in_array($role, array_values($user->roles))) {
            return true;
        } else {
            return false;
        }
    }
}

/*
 * print dump of array or object
 */

function _print_var_dump($array_or_object, $with_die = false) {
    echo '<pre>';
    print_r($array_or_object);
    echo '</pre>';
    if ($with_die)
        die('DONE');
}

/**
 * $role_name : either single value = 'authenticated user' or array : array('authenticated user','admin user')
 * $user: full user object, if null then default is taken
 */
function mcc_common_user_has_role($role_name, $user = NULL) {
    if ($user == NULL)
        global $user;
    if (!is_array($role_name))
        $check = in_array($role_name, array_values($user->roles));
    else
        $check = array_intersect($role_name, array_values($user->roles));
    if (!empty($check))
        return TRUE;
    return FALSE;
}

function _implode_assoc_array($arr, $field_name) {
    $ret_str = '';
    foreach ($arr as $val) {
        $ret_str .= $val[$field_name] . ', ';
    }
    return rtrim($ret_str, ', ');
}

function theme_syllabus_pdf_thumb_upload($variables) {
    $element = $variables['element'];
    $output = '';
//    $output .= '<div class="image-widget form-managed-file clearfix">';
//    // If image is uploaded show its thumbnail to the output HTML
//    if ($element['fid']['#value'] != 0) {
//        $output .= '<div class="image-preview">';
//        $output .= theme('image_style', array('style_name' => 'thumbnail', 'path' => 'public://mcc_activities/'.$element['#file']->filename, 'getsize' => FALSE));
//        $output .= '</div>';
//    }
//    $output .= '<div class="image-widget-data">';
    if ($element['fid']['#value'] != 0) {
        $element['filename']['#markup'] .= ' <span class="file-size">(' . format_size($element['#file']->filesize) . ')</span> ';
    }
    $output .= drupal_render_children($element);
    $output .= '</div>';
    $output .= '</div>';
    return $output;
}

function randomKey($length) {
    //$pool = array_merge(range(0, 9), range('a', 'z'), range('A', 'Z'));
    $pool = array_merge(range(0, 9), range('A', 'H'), range('J', 'N'), range('P', 'Z'));
    $key = '';
    for ($i = 0; $i < $length; $i++) {
        $key .= $pool[mt_rand(0, count($pool) - 1)];
    }
    return $key;
}

function format_phone_number($number) {
    $numbers_only = preg_replace("/[^\d]/", "", $number);
    return preg_replace("/^1?(\d{3})(\d{3})(\d{4})$/", "+1-$1-$2-$3", $numbers_only);
}

function check_if_mcc_pages() {
    global $user;
    return false;
    if (empty($user->uid))
        return false;
    //$mcc_pages = array('user', 'parse-syllabus', 'upload-syllabus', 'academic-syllabus', 'academic-syllabus-brief',);
    $mcc_pages = array('user', 'parse-syllabus', 'academic-syllabus-brief');
    $arg = arg(0);
    if (in_array($arg, $mcc_pages)) {
        return TRUE;
    } else {
        $path = current_path();
        $path_alias = drupal_lookup_path('alias', $path);
        if (in_array($path, $mcc_pages)) {
            return TRUE;
        } else if (0 === strpos($path, 'file/ajax')) {
            return TRUE;
        } else if (0 === strpos($path, 'system/ajax')) {
            return TRUE;
        }
    }
    return FALSE;
}

function _add_datatable_resources() {
    $common_options = array(
        'type' => 'external',
        'scope' => 'header',
        'group' => -100,
        'weight' => 5
    );
    //drupal_add_js(drupal_get_path('module', 'wm_common') . '/js/jquery.dataTables.js', 'file');
    drupal_add_js('//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js', $common_options);
    drupal_add_js('//cdn.datatables.net/1.10.13/js/dataTables.bootstrap.min.js', $common_options);
    drupal_add_js('//cdn.datatables.net/responsive/2.1.1/js/dataTables.responsive.min.js', $common_options);
    drupal_add_js('//cdn.datatables.net/responsive/2.1.1/js/responsive.bootstrap.min.js', $common_options);
    drupal_add_js('//cdn.datatables.net/buttons/1.3.1/js/dataTables.buttons.min.js', $common_options);
    drupal_add_js('//cdn.datatables.net/buttons/1.3.1/js/buttons.print.min.js', $common_options);
    drupal_add_js('//cdn.datatables.net/select/1.2.2/js/dataTables.select.min.js', $common_options);
    drupal_add_css('//cdn.datatables.net/1.10.13/css/dataTables.bootstrap.min.css', array('type' => 'external', 'scope' => 'footer'));
    drupal_add_css('//cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css', array('type' => 'external', 'scope' => 'footer'));



    drupal_add_js('//cdn.jsdelivr.net/momentjs/latest/moment.min.js', $common_options);
    drupal_add_js('//cdn.jsdelivr.net/bootstrap.daterangepicker/2/daterangepicker.js', $common_options);
    drupal_add_css('//cdn.jsdelivr.net/bootstrap.daterangepicker/2/daterangepicker.css', $common_options);
}

function _add_chart_css_js() {
    drupal_add_js(drupal_get_path('module', 'mcc_common') . '/js/charts/Chart.bundle.js', 'file');
    drupal_add_js(drupal_get_path('module', 'mcc_common') . '/js/charts/utils.js', 'file');
}

function _add_chartist_css_js() {
    drupal_add_js('//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js', array('type' => 'external', 'scope' => 'footer'));
    drupal_add_css('//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css', array('type' => 'external', 'scope' => 'footer'));
}

function _add_pdf_js() {
    drupal_add_js(drupal_get_path('module', 'mcc_common') . '/js/pdf.js', 'file');
    drupal_add_js(drupal_get_path('module', 'mcc_common') . '/js/pdf.worker.js', 'file');
}

function pretty_print($output, $die = true) {
    echo '<br/>----------- pretty_print: START -------------<br/>';
    echo '<pre>';
    print_r($output);
    echo '</pre>';

    if ($die) {
        echo '<br/>----------- pretty_print: END -------------<br/>';
        die();
    }
}

function generate_send_mail_contents($mail_to, $mail_type, $params_list = array(), $emailFrom = null) {
    global $conf;
    global $base_url;
    if (empty($emailFrom)) {
        $site_conf_mail = $conf['site_mail'];
    } else
        $site_conf_mail = $emailFrom;
    $mail = null;
    watchdog('MMail', 'mail from' . $site_conf_mail);
    switch ($mail_type) {
        case 'mcc-mail':
            $params = array('body' => $params_list['email_content'], 'subject' => $params_list['subject'], 'cc' => $params_list['cc'], 'bcc' => $params_list['bcc']);
            $key = 'mcc_mail';
            $to = $mail_to;
            $from = $site_conf_mail;
            $mail = drupal_mail('mcc_common', $key, $to, language_default(), $params, $from);
            break;
    }
    return $mail;
}

/**
 * @param $key
 * @param $message
 * @param $params
 * hook_mail()
 */
function mcc_common_mail($key, &$message, $params) {
    $language = $message['language'];
    /* Content-Transfer-Encoding: base64 */
    switch ($key) {
        case 'mcc_mail':
            $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; Content-Transfer-Encoding: base64';
            $message['headers']['Cc'] = isset($params['cc']) ? $params['cc'] : "";
            $message['headers']['Bcc'] = isset($params['bcc']) ? $params['bcc'] : "";
            $message['subject'] = $params['subject'];
            $message['body'][] = $params['body'];
            break;
    }
}

function _return_materials_url($material_name, $folder_name) {
    //https://docs.google.com/viewer?url='.$dl_url.'
    $google_doc_url = "https://docs.google.com/viewer?url=";
    $material_url = 'public://' . $folder_name; //mcc_syllabus/materials/';
    $allowed_file_extensions = array('doc', 'docx', 'pdf', 'ppt', 'pptx');
    foreach ($allowed_file_extensions as $extension) {
        $curr_file_name = '';
        $curr_file_name = $material_url . trim($material_name) . '.' . $extension;
        if (file_exists($curr_file_name)) {
            $curr_file_url = file_create_url($curr_file_name);
            if (!empty($curr_file_url))
                return $google_doc_url . rawurlencode($curr_file_url);
        }
    }
    return null;
}

function _prepare_materials_url($uri) {
    $google_doc_url = "https://docs.google.com/viewer?url=";
    $curr_file_url = file_create_url($uri);
    if (!empty($curr_file_url))
        return $google_doc_url . rawurlencode($curr_file_url);
    return null;
}

function _prepare_hyperlinked_text($str) {
    $reg_exUrl = "/(http|https|ftp|ftps)\:\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(\/\S*)?/";
    $urls = array();
    $urlsToReplace = array();
    if (preg_match_all($reg_exUrl, $str, $urls)) {
        $numOfMatches = count($urls[0]);
        $numOfUrlsToReplace = 0;
        for ($i = 0; $i < $numOfMatches; $i++) {
            $alreadyAdded = false;
            $numOfUrlsToReplace = count($urlsToReplace);
            for ($j = 0; $j < $numOfUrlsToReplace; $j++) {
                if ($urlsToReplace[$j] == $urls[0][$i]) {
                    $alreadyAdded = true;
                }
            }
            if (!$alreadyAdded) {
                array_push($urlsToReplace, $urls[0][$i]);
            }
        }
        $numOfUrlsToReplace = count($urlsToReplace);
        for ($i = 0; $i < $numOfUrlsToReplace; $i++) {
            $str = str_replace($urlsToReplace[$i], "<a href=\"" . $urlsToReplace[$i] . "\">" . $urlsToReplace[$i] . "</a> ", $str);
        }
        return $str;
    } else {
        return $str;
    }
}

function _format_string($string) {
    $string = str_replace('&rsquo;', "'", $string);
    $string = str_replace('&ndash;', "-", $string);
    return $string;
}

function _br2nl($buff = '') {
    $breaks = array("<br />", "<br>", "<br/>");
    $buff = str_ireplace($breaks, "\n", $buff);
    $buff = trim($buff);

    return $buff;
}

function _session_names() {
    return array(
        'fall' => 'Fall',
        'winter' => 'Winter',
        'summer' => 'Summer'
    );
}

function _session_to_months_mapping() {
    return array(
        'fall' => array('September', 'October', 'November', 'December'),
        'winter' => array('January', 'February', 'March', 'April'),
        'summer' => array('May', 'June', 'July', 'August')
    );
}

function _years_array($offset = 3) {
    $years = range(date('Y'), date('Y') + $offset);
    return array_combine($years, $years);
}

function _create_update_user($data) {
    if (filter_var($data['email'], FILTER_VALIDATE_EMAIL)) {
        $ex_user = user_load_by_mail($data['email']);
        if ($ex_user) {
            return $ex_user->uid;
        } else {
            $new_user = array(
                'name' => $data['email'],
                'pass' => '',
                'mail' => $data['email'],
                'status' => 1,
                'init' => $data['email'],
                'field_name' => array(
                    'und' => array(
                        '0' => array(
                            'value' => $data['name'],
                        )
                    ),
                ),
                'field_phone' => array(
                    'und' => array(
                        '0' => array(
                            'value' => $data['phone'],
                        )
                    ),
                ),
            );
            $user = user_save('', $new_user);
            return $user->uid;
        }
    }
    return NULL;
}

function _prepare_users_for_select_list($list_users) {
    if (!empty($list_users)) {
//    $data_users = array('');
        foreach ($list_users as $key => $user) {
            $data_users[$user->uid] = $user->field_name_value;
        }
        return $data_users;
    }
    return array();
}

function _flatten_array($arr) {
    $merged_array = array();
    foreach ($arr as $arr_key => $arr_val) {
        if (is_array($arr_val)) {
            foreach ($arr_val as $key => $val) {
                $merged_array[$key] = $val;
            }
        }
    }
    return $merged_array;
}

function _isFacultyOnly($user = null) {
    global $user;
    $user_roles = $user->roles;
    return (!in_array('administrator', $user_roles) && in_array('faculty', $user_roles)) ? TRUE : FALSE;
}

function _isFaculty($user = null) {
    global $user;
    $user_roles = $user->roles;
    return (in_array('faculty', $user_roles)) ? TRUE : FALSE;
}

function _getFacultyCourses($user = null, $course_code_only = false) {
    $mccDB = new MCCdb();
    if (empty($user))
        global $user;
    $months_mapping = _session_to_months_mapping();
    $current_month = date('F');
    $current_session = '';
    foreach ($months_mapping as $key => $session) {
        if (in_array($current_month, $session)) {
            $current_session = $key;
            break;
        }
    }
    $courses = $mccDB->getCourseInstructor($user->uid);
    if ($course_code_only) {
        $codes = array();
        if (!empty($courses)) {
            foreach ($courses as $course) {
                $codes[] = $course['course_code'];
            }
        }
        return $codes;
    }
    return $courses;
}

function _getHyperLinkedCourse($course_code, $academic_syllabuses) {
    return "<a href='/syllabus/subject/$academic_syllabuses[$course_code]'>" . $course_code . "</a>";
}
